{
  "version": "2.0.0",
  "tasks": [
    // Go build tasks
    {
      "label": "go: build api",
      "type": "shell",
      "command": "go",
      "args": ["build", "-o", "bin/api", "./cmd/api"],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$go"]
    },
    {
      "label": "go: build worker",
      "type": "shell",
      "command": "go",
      "args": ["build", "-o", "bin/worker", "./cmd/worker"],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$go"]
    },
    
    // Test tasks
    {
      "label": "go: test all",
      "type": "shell",
      "command": "go",
      "args": ["test", "-v", "./..."],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$go"]
    },
    {
      "label": "go: test current file",
      "type": "shell",
      "command": "go",
      "args": ["test", "-v", "./${relativeFileDirname}"],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$go"]
    },
    {
      "label": "go: test with coverage",
      "type": "shell",
      "command": "go",
      "args": ["test", "-v", "-cover", "-coverprofile=coverage.out", "./..."],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$go"]
    },
    
    // Frontend tasks
    {
      "label": "npm: install",
      "type": "shell",
      "command": "npm",
      "args": ["install"],
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "npm: dev",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev"],
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated"
      },
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "source": "ts",
        "fileLocation": ["relative", "${workspaceFolder}/frontend"],
        "pattern": {
          "regexp": "\\b(?:Error|Warning)\\b.*?\\s+(.+)\\s*\\((\\d+)\\s*,\\s*(\\d+)\\)\\s*:\\s*(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 4
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": ".*Local:.*",
          "endsPattern": ".*ready in.*"
        }
      }
    },
    {
      "label": "npm: build",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build"],
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "npm: lint",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint"],
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "npm: format",
      "type": "shell",
      "command": "npm",
      "args": ["run", "format"],
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    
    // Docker tasks
    {
      "label": "docker: start dev environment",
      "type": "shell",
      "command": "make",
      "args": ["dev-up"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "docker: stop dev environment",
      "type": "shell",
      "command": "make",
      "args": ["dev-down"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "docker: reset dev environment",
      "type": "shell",
      "command": "make",
      "args": ["dev-reset"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    
    // Compound tasks
    {
      "label": "Start Development Services",
      "dependsOrder": "sequence",
      "dependsOn": [
        "docker: start dev environment"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "Full Development Setup",
      "dependsOrder": "sequence",
      "dependsOn": [
        "docker: start dev environment",
        "npm: install"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    
    // Code quality tasks
    {
      "label": "lint: all",
      "dependsOrder": "parallel",
      "dependsOn": [
        "go: vet",
        "npm: lint"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    },
    {
      "label": "go: vet",
      "type": "shell",
      "command": "go",
      "args": ["vet", "./..."],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$go"]
    },
    {
      "label": "go: fmt",
      "type": "shell",
      "command": "gofmt",
      "args": ["-w", "."],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    
    // Performance and profiling
    {
      "label": "go: bench",
      "type": "shell",
      "command": "go",
      "args": ["test", "-bench=.", "-benchmem", "./..."],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$go"]
    },
    {
      "label": "go: cpu profile",
      "type": "shell",
      "command": "go",
      "args": ["test", "-cpuprofile=cpu.prof", "-bench=.", "./..."],
      "options": {
        "cwd": "${workspaceFolder}/backend"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$go"]
    }
  ]
}